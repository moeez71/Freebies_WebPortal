
// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.managedbean;

import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.sleepycat.persist.model.Persistent;

import uk.co.planetbeyond.service.constants.Constants;
import uk.co.planetbeyond.service.generated.OfferCategoryBean;
import uk.co.planetbeyond.service.generated.exception.DAOException;
import uk.co.planetbeyond.service.manager.OfferCategoryManagerImpl;

/**
 * If any changes needs to be made to the OfferCategoryBean, it MUST not be made directly to OfferCategoryBean Instead the OfferCategoryManagedBean
 * should be used to make the changes
 */
@ManagedBean(name = "offerCategoryBean")
@ViewScoped
@Persistent
public class OfferCategoryManagedBean extends OfferCategoryBean
{
	private static final long serialVersionUID = 5358424017241885951L;
	static Logger log = LoggerFactory.getLogger(OfferCategoryBean.class);

	List<OfferCategoryBean> listOfCategories;

	/**
	 * Make the constructor public so that it can be accessed externally
	 */
	public OfferCategoryManagedBean()
	{
		super();
	}

	public String saveCategory()
	{

		try
		{
			// this.setCreationTimestamp(creationTimestamp);
			this.save();
		}
		catch (DAOException e)
		{
			log.error(e.toString(), e);
		}
		return "offer_category.xhtml?faces-redirect=true";
	}

	public List<OfferCategoryBean> getOfferCategories()
	{

		try
		{
			listOfCategories = OfferCategoryManagerImpl.getInstance().loadAllAsList();
		}
		catch (DAOException e)
		{
			log.error(e.toString(), e);
		}
		return listOfCategories;
	}

	/**
	 * Method to translate offer type depending upon Tinyint input in Database
	 * 
	 * @returns male or female;
	 */
	public String getCategoryTranslation()
	{

		if (Constants.CATEGORY_TYPE_DAILY.equals(this.getType()))
		{
			return Constants.CATEGORY_TYPE_DAILY_STRING;
		}

		if (Constants.CATEGORY_TYPE_FACEBOOK.equals(this.getType()))
		{
			return Constants.CATEGORY_TYPE_FACEBOOK_STRING;
		}

		if (Constants.CATEGORY_TYPE_INSTAGRAM.equals(this.getType()))
		{
			return Constants.CATEGORY_TYPE_INSTAGRAM_STRING;
		}

		if (Constants.CATEGORY_TYPE_SOUNDCLOUD.equals(this.getType()))
		{
			return Constants.CATEGORY_TYPE_SNAPCHAT_STRING;
		}

		if (Constants.CATEGORY_TYPE_SNAPCHAT.equals(this.getType()))
		{
			return Constants.CATEGORY_TYPE_SNAPCHAT_STRING;
		}

		else
			return "Unknown";

	}
}
