


// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.generated.legacymanager;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;

public final class Manager
{
	// //////////////////////////////////////////////////
	// Helper methods for fetching numbers using IDs or names
	// //////////////////////////////////////////////////

	public static Integer getInteger(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getInteger(rs, pos);
	}

	public static Integer getInteger(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getInteger(rs, column);
	}

	public static void setInteger(PreparedStatement ps, int pos, Integer i) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setInteger(ps, pos, i);
	}

	public static Float getFloat(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getFloat(rs, pos);
	}

	public static Float getFloat(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getFloat(rs, column);
	}

	public static void setFloat(PreparedStatement ps, int pos, Float f) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setFloat(ps, pos, f);
	}

	public static Double getDouble(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getDouble(rs, pos);
	}

	public static Double getDouble(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getDouble(rs, column);
	}

	public static void setDouble(PreparedStatement ps, int pos, Double d) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setDouble(ps, pos, d);
	}

	public static Long getLong(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getLong(rs, pos);
	}

	public static Long getLong(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getLong(rs, column);
	}

	public static void setLong(PreparedStatement ps, int pos, Long l) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setLong(ps, pos, l);
	}

	public static Boolean getBoolean(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getBoolean(rs, pos);
	}

	public static Boolean getBoolean(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getBoolean(rs, column);
	}

	public static void setBoolean(PreparedStatement ps, int pos, Boolean b) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setBoolean(ps, pos, b);
	}

	public static Calendar getCalendar(ResultSet rs, int pos) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getCalendar(rs, pos);
	}

	public static Calendar getCalendar(ResultSet rs, String column) throws SQLException
	{
		return uk.co.planetbeyond.service.generated.Manager.getCalendar(rs, column);
	}

	public static void setCalendar(PreparedStatement ps, int pos, Calendar calendar) throws SQLException
	{
		uk.co.planetbeyond.service.generated.Manager.setCalendar(ps, pos, calendar);
	}

	public static boolean isValueRepresentingNull(Calendar calendar)
	{
		return uk.co.planetbeyond.service.generated.Manager.isValueRepresentingNull(calendar);
	}

	public static java.util.Date getDateFromString(String strDate)
	{
		return uk.co.planetbeyond.service.generated.Manager.getDateFromString(strDate);
	}

	public static boolean isDate(String strDate)
	{
		return uk.co.planetbeyond.service.generated.Manager.isDate(strDate);
	}

	public static String buildProcedureCall(String packageName, String procedureName, int paramCount)
	{
		return uk.co.planetbeyond.service.generated.Manager.buildProcedureCall(packageName, procedureName, paramCount);
	}

	public static String buildProcedureCall(String procedureName, int paramCount)
	{
		return uk.co.planetbeyond.service.generated.Manager.buildProcedureCall(procedureName, paramCount);
	}
}
