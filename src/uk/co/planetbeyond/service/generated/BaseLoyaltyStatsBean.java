




// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.service.manager.LoyaltyStatsManagerImpl;

/**
 * LoyaltyStatsBean is a mapping of loyalty_stats Table.
 * @author sql2java
*/
@Persistent
public class BaseLoyaltyStatsBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = 5694455838414074681L;
	
    protected java.util.Date lastUpdated;
    protected Integer pointsRemaining;
    protected Long pointsConsumed;
    protected Integer totalPoints;
    protected Integer loyaltyStatId;

    /**
     * Prefered methods to create a LoyaltyStatsBean is via the createLoyaltyStatsBean method in LoyaltyStatsManager or
     * via the factory class LoyaltyStatsFactory create method
     */
    public BaseLoyaltyStatsBean()
    {
    }

    /**
     * Getter method for lastUpdated.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: loyalty_stats.last_updated</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of lastUpdated
     */
    public java.util.Date getLastUpdated()
    {
        return lastUpdated;
    }

    /**
     * Setter method for lastUpdated.
     * <br>
     *
     * @param newVal the new value to be assigned to lastUpdated
     */
    public void setLastUpdated(java.util.Date newVal)
    {
        lastUpdated = newVal;
    }

    /**
     * Getter method for pointsRemaining.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: loyalty_stats.points_remaining</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of pointsRemaining
     */
    public Integer getPointsRemaining()
    {
        return pointsRemaining;
    }

    /**
     * Setter method for pointsRemaining.
     * <br>
     *
     * @param newVal the new value to be assigned to pointsRemaining
     */
    public void setPointsRemaining(Integer newVal)
    {
        pointsRemaining = newVal;
    }

    /**
     * Getter method for pointsConsumed.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: loyalty_stats.points_consumed</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of pointsConsumed
     */
    public Long getPointsConsumed()
    {
        return pointsConsumed;
    }

    /**
     * Setter method for pointsConsumed.
     * <br>
     *
     * @param newVal the new value to be assigned to pointsConsumed
     */
    public void setPointsConsumed(Long newVal)
    {
        pointsConsumed = newVal;
    }

    /**
     * Getter method for totalPoints.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: loyalty_stats.total_points</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of totalPoints
     */
    public Integer getTotalPoints()
    {
        return totalPoints;
    }

    /**
     * Setter method for totalPoints.
     * <br>
     *
     * @param newVal the new value to be assigned to totalPoints
     */
    public void setTotalPoints(Integer newVal)
    {
        totalPoints = newVal;
    }

    /**
     * Getter method for loyaltyStatId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: loyalty_stats.loyalty_stat_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of loyaltyStatId
     */
    public Integer getLoyaltyStatId()
    {
        return loyaltyStatId;
    }

    /**
     * Setter method for loyaltyStatId.
     * <br>
     *
     * @param newVal the new value to be assigned to loyaltyStatId
     */
    public void setLoyaltyStatId(Integer newVal)
    {
        loyaltyStatId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseLoyaltyStatsBean bean)
    {
        setLastUpdated(bean.getLastUpdated());
        setPointsRemaining(bean.getPointsRemaining());
        setPointsConsumed(bean.getPointsConsumed());
        setTotalPoints(bean.getTotalPoints());
        setLoyaltyStatId(bean.getLoyaltyStatId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseLoyaltyStatsBean)) {
			return false;
		}

		BaseLoyaltyStatsBean obj = (BaseLoyaltyStatsBean) object;
		return new EqualsBuilder()
            .append(getLastUpdated(), obj.getLastUpdated())
            .append(getPointsRemaining(), obj.getPointsRemaining())
            .append(getPointsConsumed(), obj.getPointsConsumed())
            .append(getTotalPoints(), obj.getTotalPoints())
            .append(getLoyaltyStatId(), obj.getLoyaltyStatId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public LoyaltyStatsBean toManagedBean()
    {
	LoyaltyStatsBean bean = LoyaltyStatsManagerImpl.getInstance().createLoyaltyStatsBean();
        bean.setLastUpdated(getLastUpdated());
        bean.setPointsRemaining(getPointsRemaining());
        bean.setPointsConsumed(getPointsConsumed());
        bean.setTotalPoints(getTotalPoints());
        bean.setLoyaltyStatId(getLoyaltyStatId());
	return bean;
    }
}
