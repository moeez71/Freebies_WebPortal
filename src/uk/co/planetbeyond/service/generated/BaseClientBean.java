




// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.service.manager.ClientManagerImpl;

/**
 * ClientBean is a mapping of client Table.
 * @author sql2java
*/
@Persistent
public class BaseClientBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = 5694455838414074681L;
	
    protected java.util.Date creationTimestamp;
    protected String contactNumber;
    protected String email;
    protected String address;
    protected String clientName;
    protected Integer clientId;

    /**
     * Prefered methods to create a ClientBean is via the createClientBean method in ClientManager or
     * via the factory class ClientFactory create method
     */
    public BaseClientBean()
    {
    }

    /**
     * Getter method for creationTimestamp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.creation_timestamp</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of creationTimestamp
     */
    public java.util.Date getCreationTimestamp()
    {
        return creationTimestamp;
    }

    /**
     * Setter method for creationTimestamp.
     * <br>
     *
     * @param newVal the new value to be assigned to creationTimestamp
     */
    public void setCreationTimestamp(java.util.Date newVal)
    {
        creationTimestamp = newVal;
    }

    /**
     * Getter method for contactNumber.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.contact_number</li>
     * <li>column size: 15</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of contactNumber
     */
    public String getContactNumber()
    {
        return contactNumber;
    }

    /**
     * Setter method for contactNumber.
     * <br>
     *
     * @param newVal the new value to be assigned to contactNumber
     */
    public void setContactNumber(String newVal)
    {
        contactNumber = newVal;
    }

    /**
     * Getter method for email.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.email</li>
     * <li>column size: 20</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of email
     */
    public String getEmail()
    {
        return email;
    }

    /**
     * Setter method for email.
     * <br>
     *
     * @param newVal the new value to be assigned to email
     */
    public void setEmail(String newVal)
    {
        email = newVal;
    }

    /**
     * Getter method for address.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.address</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of address
     */
    public String getAddress()
    {
        return address;
    }

    /**
     * Setter method for address.
     * <br>
     *
     * @param newVal the new value to be assigned to address
     */
    public void setAddress(String newVal)
    {
        address = newVal;
    }

    /**
     * Getter method for clientName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.client_name</li>
     * <li>column size: 20</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of clientName
     */
    public String getClientName()
    {
        return clientName;
    }

    /**
     * Setter method for clientName.
     * <br>
     *
     * @param newVal the new value to be assigned to clientName
     */
    public void setClientName(String newVal)
    {
        clientName = newVal;
    }

    /**
     * Getter method for clientId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: client.client_id</li>
     * <li> imported key: advert_schedule.client_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of clientId
     */
    public Integer getClientId()
    {
        return clientId;
    }

    /**
     * Setter method for clientId.
     * <br>
     *
     * @param newVal the new value to be assigned to clientId
     */
    public void setClientId(Integer newVal)
    {
        clientId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseClientBean bean)
    {
        setCreationTimestamp(bean.getCreationTimestamp());
        setContactNumber(bean.getContactNumber());
        setEmail(bean.getEmail());
        setAddress(bean.getAddress());
        setClientName(bean.getClientName());
        setClientId(bean.getClientId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseClientBean)) {
			return false;
		}

		BaseClientBean obj = (BaseClientBean) object;
		return new EqualsBuilder()
            .append(getCreationTimestamp(), obj.getCreationTimestamp())
            .append(getContactNumber(), obj.getContactNumber())
            .append(getEmail(), obj.getEmail())
            .append(getAddress(), obj.getAddress())
            .append(getClientName(), obj.getClientName())
            .append(getClientId(), obj.getClientId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public ClientBean toManagedBean()
    {
	ClientBean bean = ClientManagerImpl.getInstance().createClientBean();
        bean.setCreationTimestamp(getCreationTimestamp());
        bean.setContactNumber(getContactNumber());
        bean.setEmail(getEmail());
        bean.setAddress(getAddress());
        bean.setClientName(getClientName());
        bean.setClientId(getClientId());
	return bean;
    }
}
