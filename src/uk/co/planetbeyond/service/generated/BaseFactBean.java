




// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.service.manager.FactManagerImpl;

/**
 * FactBean is a mapping of fact Table.
 * @author sql2java
*/
@Persistent
public class BaseFactBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = 5694455838414074681L;
	
    protected java.util.Date creationTimestamp;
    protected String text;
    protected Integer factId;

    /**
     * Prefered methods to create a FactBean is via the createFactBean method in FactManager or
     * via the factory class FactFactory create method
     */
    public BaseFactBean()
    {
    }

    /**
     * Getter method for creationTimestamp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: fact.creation_timestamp</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of creationTimestamp
     */
    public java.util.Date getCreationTimestamp()
    {
        return creationTimestamp;
    }

    /**
     * Setter method for creationTimestamp.
     * <br>
     *
     * @param newVal the new value to be assigned to creationTimestamp
     */
    public void setCreationTimestamp(java.util.Date newVal)
    {
        creationTimestamp = newVal;
    }

    /**
     * Getter method for text.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: fact.text</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of text
     */
    public String getText()
    {
        return text;
    }

    /**
     * Setter method for text.
     * <br>
     *
     * @param newVal the new value to be assigned to text
     */
    public void setText(String newVal)
    {
        text = newVal;
    }

    /**
     * Getter method for factId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: fact.fact_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of factId
     */
    public Integer getFactId()
    {
        return factId;
    }

    /**
     * Setter method for factId.
     * <br>
     *
     * @param newVal the new value to be assigned to factId
     */
    public void setFactId(Integer newVal)
    {
        factId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseFactBean bean)
    {
        setCreationTimestamp(bean.getCreationTimestamp());
        setText(bean.getText());
        setFactId(bean.getFactId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseFactBean)) {
			return false;
		}

		BaseFactBean obj = (BaseFactBean) object;
		return new EqualsBuilder()
            .append(getCreationTimestamp(), obj.getCreationTimestamp())
            .append(getText(), obj.getText())
            .append(getFactId(), obj.getFactId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public FactBean toManagedBean()
    {
	FactBean bean = FactManagerImpl.getInstance().createFactBean();
        bean.setCreationTimestamp(getCreationTimestamp());
        bean.setText(getText());
        bean.setFactId(getFactId());
	return bean;
    }
}
