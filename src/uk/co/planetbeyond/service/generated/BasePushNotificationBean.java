




// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.service.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.service.manager.PushNotificationManagerImpl;

/**
 * PushNotificationBean is a mapping of push_notification Table.
 * @author sql2java
*/
@Persistent
public class BasePushNotificationBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = 8821997923826301964L;
	
    protected Integer status;
    protected java.util.Date scheduledTime;
    protected String text;
    protected Integer notificationId;

    /**
     * Prefered methods to create a PushNotificationBean is via the createPushNotificationBean method in PushNotificationManager or
     * via the factory class PushNotificationFactory create method
     */
    public BasePushNotificationBean()
    {
    }

    /**
     * Getter method for status.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: push_notification.status</li>
     * <li>comments: 1 = delivered
2  = not-delievered</li>
     * <li>column size: 3</li>
     * <li>jdbc type returned by the driver: Types.TINYINT</li>
     * </ul>
     *
     * @return the value of status
     */
    public Integer getStatus()
    {
        return status;
    }

    /**
     * Setter method for status.
     * <br>
     *
     * @param newVal the new value to be assigned to status
     */
    public void setStatus(Integer newVal)
    {
        status = newVal;
    }

    /**
     * Getter method for scheduledTime.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: push_notification.scheduled_time</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of scheduledTime
     */
    public java.util.Date getScheduledTime()
    {
        return scheduledTime;
    }

    /**
     * Setter method for scheduledTime.
     * <br>
     *
     * @param newVal the new value to be assigned to scheduledTime
     */
    public void setScheduledTime(java.util.Date newVal)
    {
        scheduledTime = newVal;
    }

    /**
     * Getter method for text.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: push_notification.text</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of text
     */
    public String getText()
    {
        return text;
    }

    /**
     * Setter method for text.
     * <br>
     *
     * @param newVal the new value to be assigned to text
     */
    public void setText(String newVal)
    {
        text = newVal;
    }

    /**
     * Getter method for notificationId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: push_notification.notification_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of notificationId
     */
    public Integer getNotificationId()
    {
        return notificationId;
    }

    /**
     * Setter method for notificationId.
     * <br>
     *
     * @param newVal the new value to be assigned to notificationId
     */
    public void setNotificationId(Integer newVal)
    {
        notificationId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BasePushNotificationBean bean)
    {
        setStatus(bean.getStatus());
        setScheduledTime(bean.getScheduledTime());
        setText(bean.getText());
        setNotificationId(bean.getNotificationId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BasePushNotificationBean)) {
			return false;
		}

		BasePushNotificationBean obj = (BasePushNotificationBean) object;
		return new EqualsBuilder()
            .append(getStatus(), obj.getStatus())
            .append(getScheduledTime(), obj.getScheduledTime())
            .append(getText(), obj.getText())
            .append(getNotificationId(), obj.getNotificationId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public PushNotificationBean toManagedBean()
    {
	PushNotificationBean bean = PushNotificationManagerImpl.getInstance().createPushNotificationBean();
        bean.setStatus(getStatus());
        bean.setScheduledTime(getScheduledTime());
        bean.setText(getText());
        bean.setNotificationId(getNotificationId());
	return bean;
    }
}
